// Magic Software, Inc.
// http://www.magic-software.com
// Copyright (c) 2000-2003.  All Rights Reserved
//
// Source code from Magic Software is supplied under the terms of a license
// agreement and may not be copied or disclosed except in accordance with the
// terms of that agreement.  The various license agreements may be found at
// the Magic Software web site.  This file is subject to the license
//
// 3D GAME ENGINE SOURCE CODE
// http://www.magic-software.com/License/3DGameEngine.pdf

#include "Exporter.h"
#include <cstddef>

// Currently unsupported object conversions
// This list was taken from the enum in <maya/MFn.h>.  This is a complete list
// with the functions that get defined commented out.

void Exporter::CInvalid (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBase (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNamedObject (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CModel (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDependencyNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAddDoubleLinear (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAffect (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimCurveTimeToAngular (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimCurveTimeToDistance (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimCurveTimeToTime (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimCurveTimeToUnitless (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimCurveUnitlessToAngular (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimCurveUnitlessToDistance (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimCurveUnitlessToTime (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimCurveUnitlessToUnitless (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CResultCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CResultCurveTimeToAngular (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CResultCurveTimeToDistance (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CResultCurveTimeToTime (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CResultCurveTimeToUnitless (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAngleBetween (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAudio (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CBackground (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CColorBackground (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFileBackground (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRampBackground (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlend (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlendTwoAttr (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlendWeighted (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlendDevice (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlendColors (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBump (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBump3d (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCameraView (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CChainToSpline (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CChoice (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CCondition (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CContrast (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CClampColor (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCreate (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAlignCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAlignSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttachCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttachSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAvgCurves (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAvgSurfacePoints (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAvgNurbsSurfacePoints (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBevel (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBirailSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDPbirailSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMPbirailSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSPbirailSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBoundary (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCircle (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCloseCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CClosestPointOnSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCloseSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveFromSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveFromSurfaceBnd (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveFromSurfaceCoS (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveFromSurfaceIso (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveInfo (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDetachCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDetachSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CExtendCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CExtendSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CExtrude (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFFblendSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFFfilletSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFilletCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFitBspline (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFlow (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHardenPointCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CInsertKnotCrv (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CInsertKnotSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIntersectSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsTesselate (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsPlane (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsCube (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COffsetCos (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COffsetCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPlanarTrimSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPointOnCurveInfo (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPointOnSurfaceInfo (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPrimitive (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CProjectCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CProjectTangent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRBFsurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRebuildCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRebuildSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CReverseCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CReverseSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRevolve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRevolvedPrimitive (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCone (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderCone (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCylinder (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSphere (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSkin (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStitchSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceInfo (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTextCurves (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTrim (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUntrim (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDagNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CProxy (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUnderWorld (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CTransform (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAimConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLookAt (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGeometryConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGeometryVarGroup (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnyGeometryVarGroup (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveVarGroup (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshVarGroup (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceVarGroup (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIkEffector (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIkHandle (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CJoint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CManipulator3D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CArrowManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAxesActionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBallProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCircleManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CScreenAlignedCircleManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCircleSweepManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CConcentricProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCubicProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCylindricalProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDiscManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFreePointManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCenterManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLimitManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnableManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFreePointTriadManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPropMoveTriadManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTowPointManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCreateToolManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySplitToolManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGeometryOnLineManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCameraPlaneManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CToggleOnLineManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStateManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIsoparmManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLineManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CManipContainer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAverageCurveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBarnDoorManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBevelManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlendManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CButtonManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCameraManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCoiManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCpManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCreateCVManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCreateEPManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveEdManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveSegmentManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDirectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDofManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDropoffManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CExtendCurveDistanceManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CExtrudeManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIkSplineManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIkRPManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CJointClusterManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLightManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMotionPathManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COffsetCosManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COffsetCurveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CProjectionUVManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CProjectionMultiManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CProjectTangentManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPropModManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CQuadPtOnLineManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRbfSrfManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CReverseCurveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CReverseCrvManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CReverseSurfaceManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRevolveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRevolvedPrimitiveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSpotManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CSpotCylinderManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTriplanarProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }  
void Exporter::CTrsManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDblTrsManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPivotManip2D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CManip2DContainer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMoveUVManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMappingManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyModifierManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMoveVertexManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyVertexNormalManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTrsTransManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTrsInsertManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTrsXformManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CManipulator2D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTranslateManip2D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPlanarProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPointOnCurveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTowPointOnCurveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMarkerManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPointOnLineManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPointOnSurfaceManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTranslateUVManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRotateBoxManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRotateManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHandleRotateManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRotateLimitsManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CScaleLimitsManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CScaleManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CScalingBoxManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CScriptManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSphericalProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTextureManip3D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CToggleManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTranslateBoxManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTranslateLimitsManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTranslateManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTrimManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CJointTranslateManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CManipulator (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CCirclePointManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDimensionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFixedLineManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLightProjectionGeometry (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLineArrowManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPointManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTriadManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNormalConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COrientConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPointConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CParentConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPoleVectorConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CScaleConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTangentConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUnknownTransform (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
//void Exporter::CWorld (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CShape (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBaseLattice (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CCamera (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCluster (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSoftMod (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCollision (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDummy (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEmitter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CField (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAir (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDrag (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGravity (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNewton (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRadial (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }    
void Exporter::CTurbulence (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUniform (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CVortex (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGeometric (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsCurveGeom (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDimension (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAngle (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnnotation (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDistance (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CArcLength (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRadius (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CParamDimension (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDirectedDisc (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderRect (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnvFogShape (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLattice (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLatticeGeom (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLocator (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDropoffLocator (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMarker (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COrientationMarker (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPositionMarker (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COrientationLocator (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTrimLocator (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPlane (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSketchPlane (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CGroundPlane (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COrthoGrid (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSprite (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsSurfaceGeom (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CMesh (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshGeom (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderSphere (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFlexor (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CClusterFlexor (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGuideLine (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CAmbientLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNonAmbientLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAreaLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLinearLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNonExtendedLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CDirectionalLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CPointLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CSpotLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CParticle (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyToolFeedbackShape (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRigidConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRigid (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSpring (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUnknownDag (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDefaultLightList (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeleteComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDispatchCompute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CShadingEngine (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDisplacementShader (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDistanceBetween (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDOF (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDummyConnectable (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynamicsController (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGeoConnectable (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CExpression (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CExtract (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFilterClosestSample (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFilterEuler (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFilterSimplify (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGammaCorrect (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGeometryFilt (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBendLattice (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlendShape (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBulgeLattice (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFFD (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFfdDualBase (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRigidDeform (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSculpt (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTweak (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CWeightGeometryFilt (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CClusterFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSoftModFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CJointCluster (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CWire (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGroupId (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGroupParts (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGuide (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHsvToRgb (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHyperGraphInfo (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHyperLayout (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHyperView (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIkSolver (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMCsolver (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPASolver (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSCsolver (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRPsolver (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSplineSolver (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIkSystem (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImagePlane (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLambert (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CReflect (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlinn (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPhong (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPhongExplorer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLayeredShader (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLightInfo (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLeastSquares (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLightFogMaterial (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnvFogMaterial (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLightList (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLightSource (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLuminance (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMakeGroup (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMaterial (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDiffuseMaterial (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLambertMaterial (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlinnMaterial (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPhongMaterial (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLightSourceMaterial (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMaterialInfo (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMatrixAdd (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMatrixHold (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMatrixMult (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMatrixPass (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMatrixWtAdd (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMidModifier (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMidModifierWithMatrix (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyBevel (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyTweak (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyAppend (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyChipOff (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCloseBorder (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCollapseEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCollapseF (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCylProj (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyDelEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyDelFacet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyDelVertex (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyExtrudeFacet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMapCut (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMapDel (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMapSew (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMergeEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMergeFacet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMoveEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMoveFacet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMoveFacetUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMoveUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMoveVertex (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMoveVertexUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyNormal (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyPlanProj (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyProj (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyQuad (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySmooth (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CPolySoftEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySphProj (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySplit (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySubdEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySubdFacet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyTriangulate (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCreator (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyPrimitive (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCone (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCube (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCylinder (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMesh (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySphere (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyTorus (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCreateFacet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyUnite (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMotionPath (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMultilisterLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMultiplyDivide (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COldGeometryConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COpticalFX (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CParticleAgeMapper (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CParticleCloud (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CParticleColorMapper (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CParticleIncandecenceMapper (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CParticleTransparencyMapper (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPartition (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CPlace2dTexture (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPlace3dTexture (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginDependNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginLocatorNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPlusMinusAverage (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPointMatrixMult (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySeparate (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPostProcessList (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CProjection (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRecord (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderUtilityList (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CReverse (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRgbToHsv (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }  
void Exporter::CRigidSolver (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }  
void Exporter::CSet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTextureBakeSet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CVertexBakeSet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSetRange (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CShaderGlow (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CShaderList (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CShadingMap (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSamplerInfo (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CShapeFragment (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSimpleVolumeShader (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSl60 (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSnapshot (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStoryBoard (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSummaryObject (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSuper (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CControl (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceLuminance (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceShader (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTextureList (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTextureEnv (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnvBall (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnvCube (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnvChrome (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnvSky (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnvSphere (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTexture2d (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBulge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CChecker (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCloth (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFileTexture (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFractal (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGrid (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMountain (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRamp (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStencil (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CWater (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTexture3d (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBrownian (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCloud (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCrater (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CGranite (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLeather (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMarble (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRock (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSnow (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSolidFractal (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStucco (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTxSl (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CWood (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTime (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTimeToUnitConversion (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderSetup (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderGlobals (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderGlobalsList (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderQuality (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CResolution (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }  
void Exporter::CHardwareRenderGlobals (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CArrayMapper (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUnitConversion (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUnitToTimeConversion (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUseBackground (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUnknown (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CVectorProduct (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CVolumeShader (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveCVComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveEPComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveKnotComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveParamComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIsoparmComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPivotComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceCVComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceEPComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceKnotComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEdgeComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLatticeComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceRangeComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDecayRegionCapComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDecayRegionComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshEdgeComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshPolygonComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshFrEdgeComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshVertComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COrientationComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubVertexComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMultiSubVertexComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSetGroupComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynParticleSetComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSelectionItem (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDagSelectionItem (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNonDagSelectionItem (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CItemList (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNumericAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDoubleAngleAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFloatAngleAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDoubleLinearAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFloatLinearAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTimeAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnumAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUnitAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTypedAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCompoundAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGenericAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLightDataAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMatrixAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFloatMatrixAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMessageAttribute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPlugin (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CComponentListData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDoubleArrayData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CIntArrayData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLatticeData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMatrixData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsSurfaceData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsCurveData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNumericData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData2Double (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData2Float (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData2Int (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData2Short (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData3Double (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData3Float (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData3Int (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData3Short (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPointArrayData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSphereData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStringData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStringArrayData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CVectorArrayData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSelectionList (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTransformGeometry (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCommEdgePtManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCommEdgeOperManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCommEdgeSegmentManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCommCornerManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCommCornerOperManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginDeformerNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTorus (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyBoolOp (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSingleShadingSwitch (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDoubleShadingSwitch (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTripleShadingSwitch (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsSquare (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnisotropy (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNonLinear (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformFunc (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformBend (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformTwist (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformSquash (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformFlare (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformSine (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformWave (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformBendManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformTwistManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformSquashManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformFlareManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformSineManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeformWaveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSoftModManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDistanceManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CScript (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveFromMeshEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveCurveIntersect (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsCircular3PtArc (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsCircular2PtArc (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COffsetSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRoundConstantRadius (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRoundRadiusManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRoundRadiusCrvManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRoundConstantRadiusManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CThreePointArcManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTwoPointArcManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTextButtonManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COffsetSurfaceManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageLoad (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageSave (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageNetSrc (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageNetDest (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageRender (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageAdd (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageDiff (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageMultiply (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageOver (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageUnder (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageColorCorrect (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageBlur (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageDepth (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageDisplay (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageView (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImageMotionBlur (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMatrixFloatData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSkinShader (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CComponentManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSelectionListData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CObjectFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CObjectMultiFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CObjectNameFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CObjectTypeFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CObjectAttrFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CObjectRenderFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CObjectScriptFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSelectionListOperator (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdiv (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyToSubdiv (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
//void Exporter::CSkinClusterFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCharacter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCharacterOffset (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDagPose (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStitchAsNurbsShell (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CExplodeNurbsShell (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsBoolean (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStitchSrfManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CForceUpdateManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginManipContainer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySewEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMergeVert (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySmoothFacet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSmoothCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGlobalStitch (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivCVComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivEdgeComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivFaceComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTranslateUVManip2D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRotateUVManip2D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CScaleUVManip2D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyTweakUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginShape (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGeometryData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSingleIndexedComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDoubleIndexedComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTripleIndexedComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CExtendSurfaceDistanceManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSquareSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSquareSrfManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivToPoly (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynBase (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynEmitterManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynFieldsManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynBaseFieldManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynAirManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynNewtonManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynTurbulenceManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynSpreadManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynAttenuationManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynArrayAttrsData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginFieldNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginEmitterNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginSpringNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDisplayLayer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDisplayLayerManager (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyColorPerVertex (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCharacterMappingData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynSweptGeometryData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CWrapFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshVtxFaceComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBinaryData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute2Double (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute2Float (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute2Short (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute2Int (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute3Double (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute3Float (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute3Short (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute3Int (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CReference (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlindData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBlindDataTemplate (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyBlindData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyNormalPerVertex (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNurbsToSubdiv (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginIkSolver (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CInstancer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMoveVertexManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStroke (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBrush (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStrokeGlobals (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginGeometryData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLightLink (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDynGlobals (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyReduce (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLodThresholds (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CChooser (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLodGroup (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMultDoubleLinear (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFourByFourMatrix (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTowPointOnSurfaceManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceEdManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSurfaceFaceComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CClipScheduler (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CClipLibrary (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubSurface (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSmoothTangentSrf (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderLayer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderLayerManager (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyFlipEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyExtrudeEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimBlend (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAnimBlendInOut (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyAppendVertex (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUvChooser (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivCompId (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CVolumeAxis (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDeleteUVSet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdHierBlind (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdBlindData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCharacterMap (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CLayeredTexture (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivCollapse (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CParticleSamplerInfo (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCopyUVSet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCreateUVSet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CClip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySplitVert (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivGeom (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CUInt64ArrayData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySplitEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivReverseFaces (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMeshMapComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CXsectionSubdivEdit (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivToNurbs (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEditCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEditCurveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCrossSectionManager (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CCreateSectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCrossSectionEditManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDropOffFunction (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdBoolean (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdModifyEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CModifyEdgeCrvManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CModifyEdgeManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CScalePointManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTransformBoxManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CSymmetryLocator (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSymmetryMapVector (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSymmetryMapCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveFromSubdivEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCreateBPManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CModifyEdgeBaseManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdExtrudeFace (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivSurfaceVarGroup (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSfRevolveManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveFromSubdivFace (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CModelFacade (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMaterialFacade (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnvironmentFacade (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CModelFacadeDefault (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMaterialFacadeColor (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CEnvironmentFacadeDefault (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyTransfer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyAverageVertex (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyAutoProj (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CPolyLayoutUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMapSewMove (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdModifier (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdMoveVertex (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdMoveEdge (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdMoveFace (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdDelFace (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSnapshotShape (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdivMapComponent (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CJiggleDeformer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGlobalCacheControls (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CDiskCache (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdCloseBorder (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdMergeVert (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBoxData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBox (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRenderBox (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdSplitFace (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginAnimBlendNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CVolumeFog (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdTweakUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdMapCut (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdLayoutUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdMapSewMove (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COcean (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CVolumeNoise (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdAutoProj (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdSubdivideFace (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CNoise (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAttribute4Double (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CData4Double (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdPlanProj (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdTweak (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdProjectionManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdMappingManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHardwareReflectionMap (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyNormalizeUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyFlipUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHwShaderNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginHwShaderNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdAddTopology (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSubdCleanTopology (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImplicitCone (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CImplicitSphere (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRampShader (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CVolumeLight (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::COceanShader (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CBevelPlus (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStyleCurve (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCut (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyPoke (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyWedgeFace (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCutManipContainer (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyCutManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyPokeManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFluidTexture3D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFluidTexture2D (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyMergeUV (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyStraightenUVBorder (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CAlignManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPluginTransformNode (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFluid (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFluidGeom (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFluidData (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CSmear (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStringShadingSwitch (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CStudioClearCoat (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFluidEmitter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHeightField (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CGeoConnector (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CSnapshotPath (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); } 
void Exporter::CPluginObjectSet (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CQuadShadingSwitch (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolyExtrudeVertex (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPairBlend (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTextManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CViewManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CXformManip (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMute (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTrimWithBoundaries (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CCurveFromMeshCoM (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CFollicle (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHairSystem (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRemapValue (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRemapColor (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CRemapHsv (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHairConstraint (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CTimeFunction (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CMentalRayTexture (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CObjectBinFilter (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPolySmoothProxy (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPfxGeometry (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPfxHair (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CHairTubeShader (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
void Exporter::CPsdFileTexture (const MFnDagNode& rkDagNode) { Placeholder(rkDagNode); }
